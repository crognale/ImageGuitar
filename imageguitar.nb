Notebook[{Cell[
CellGroupData[{Cell[
BoxData[{RowBox[{"\n","\n","(*partition edge detected image into distinct parameterized lines*)","\n","\n","pointListToLines[pointList_, neighborhoodSize_: 6] :=","\n","Module[{L = DeleteDuplicates[pointList], NF, \[Lambda], lineBag,","\n","counter, seenQ, sLB, nearest, nearest1, nextPoint,","\n","couldReverseQ, \[ScriptD], \[ScriptN], \[ScriptS]}, NF = Nearest[L];","\n","\[Lambda] = Length[L];","\n","(*list of segments*)lineBag = {};","\n","counter = 0;","\n","While[counter < \[Lambda],(*new segment*)","\n","sLB = {RandomChoice[DeleteCases[L, _?seenQ]]};","\n","seenQ[sLB[[1]]] = True;","\n","counter++;","\n","couldReverseQ = True;","\n","(*complete segment*)","\n","While[(nearest = NF[Last[sLB], {Infinity, neighborhoodSize}];","\n","nearest1 =","\n","SortBy[DeleteCases[nearest, _?seenQ],","\n","1. EuclideanDistance[Last[sLB], #] &];","\n","nearest1 =!= {} || couldReverseQ),","\n","If[nearest1 === {},(*extend the other end;","\n","penalize sharp edges*)sLB = Reverse[sLB];","\n","couldReverseQ = False,(*prefer straight continuation*)","\n","nextPoint =","\n","If[Length[sLB] \[LessEqual] 3,","\n","nearest1[[1]], \[ScriptD] =","\n","1. Normalize[(sLB[[-1]] - sLB[[-2]]) +","\n","1/2 (sLB[[-2]] - sLB[[-3]])];","\n","\[ScriptN] = {-1, 1} Reverse[\[ScriptD]];","\n","\[ScriptS] =","\n","Sort[{Sqrt[(\[ScriptD].(# - sLB[[-1]]))^2 +(*perpendicular*)","\n","2 (\[ScriptN].(# - sLB[[-1]]))^2], #} & /@ nearest1];","\n","\[ScriptS][[1, 2]]];","\n","AppendTo[sLB, nextPoint];","\n","seenQ[nextPoint] = True;","\n","counter++]];","\n","AppendTo[lineBag, sLB]];","\n","(*return segments sorted by length*)","\n","Reverse[SortBy[Select[lineBag, Length[#] > 12 &], Length]]]"}],"\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",RowBox[
{"fourierComponents[pointLists_, OptionsPattern[]] :=","\n","Table[fourierComponentData[pointLists[[k]],","\n","If[Head[#] === List, #[[k]], #] &[OptionValue[","\"MaxOrder\"","]],","\n","If[Head[#] === List, #[[k]], #] &[OptionValue[","\"OpenClose\"","]]], {k,","\n","Length[pointLists]}] /; Depth[pointLists] === 4"}],"\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",RowBox[
{"(*Compute Fourier coefficients of each line*)","\n","\n","fourierComponentData[pointList_, nMax_, op_] :=","\n","Module[{\[CurlyEpsilon] = 10^-3, \[Mu] = 2^6 + 10, M = 10000, s,","\n","scale, \[CapitalDelta], L, nds, sMax,","\n","if, \[ScriptX]\[ScriptY]Function, X, Y, XFT, YFT, type, CXFT, CYFT,","\n","SXFT, SYFT, Zeros},(*prepare curve*)","\n","scale = 1. Mean[","\n","Table[Max[fl /@ pointList] -","\n","Min[fl /@ pointList], {fl, {First, Last}}]];","\n","\[CapitalDelta] =","\n","EuclideanDistance[First[pointList], Last[pointList]];","\n","L = Which[op === ","\"Closed\"",", type = ","\"Closed\"",";","\n","If[First[pointList] === Last[pointList], pointList,","\n","Append[pointList, First[pointList]]], op === ","\"Open\"",",","\n","type = ","\"Open\"","; pointList, \[CapitalDelta] == 0., type = ","\"Closed\"",";","\n","pointList, \[CapitalDelta] < op, type = ","\"Closed\"",";","\n","Append[pointList, First[pointList]], True, type = ","\"Open\"",";","\n","Join[pointList, Rest[Reverse[pointList]]]];","\n","(*re-parametrize curve by arclength*)\[ScriptX]\[ScriptY]Function =","\n","BSplineFunction[L, SplineDegree \[Rule] 4];","\n","nds = NDSolve[{s'[t] ==","\n","Sqrt[\[ScriptX]\[ScriptY]Function'[","\n","t].\[ScriptX]\[ScriptY]Function'[t]], s[0] == 0},","\n","s, {t, 0, 1}, MaxSteps \[Rule] 10^5, PrecisionGoal \[Rule] 4];","\n","(*total curve length*)sMax = s[1] /. nds[[1]];","\n","if = Interpolation[","\n","Table[{s[\[Sigma]] /. nds[[1]], \[Sigma]}, {\[Sigma], 0, 1, 1/M}]];","\n","X[t_Real] :=","\n","BSplineFunction[L][Max[Min[1, if[(t + Pi)/(2 Pi) sMax]], 0]][[1]];","\n","Y[t_Real] :=","\n","BSplineFunction[L][Max[Min[1, if[(t + Pi)/(2 Pi) sMax]], 0]][[2]];","\n","(*extract Fourier coefficients*){XFT, YFT} =","\n","Fourier[Table[#[N@t], {t, -Pi + \[CurlyEpsilon],","\n","Pi - \[CurlyEpsilon], (2 Pi -","\n","2 \[CurlyEpsilon])/\[Mu]}]] & /@ {X, Y};","\n","Fejer = Table[2*Abs[\[Mu]/2 - i]/\[Mu], {i, 0, \[Mu], 1}];","\n","Zeros = Table[0, {i, 0, \[Mu], 1}];","\n","{CXFT, CYFT} = {Fejer*XFT, Fejer*YFT};","\n","{SXFT, SYFT} = {XFT*","\n","ReplacePart[Zeros, Position[XFT, _?(Abs[#] > 0 &)] \[Rule] 1],","\n","YFT*ReplacePart[Zeros, Position[YFT, _?(Abs[#] > 0 &)] \[Rule] 1]};","\n","{type, 2 Pi/","\n","Sqrt[\[Mu]]*((Transpose[","\n","Table[{Re[#], Im[#]} &[Exp[I k Pi] #[[k + 1]]], {k, 0,","\n","nMax}]] & /@ {SXFT, SYFT}))}]"}],"\n",RowBox[
{"Options[fourierComponents] = {","\"MaxOrder\""," \[Rule] 44, ","\"OpenClose\""," \[Rule] 5};"}],"\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",RowBox[
{"(* creates sound file. \[NonBreakingSpace]All sound files have been preloaded into app*)","\n","karplusStrongSynthesisX[p_, b_] := (","\n","X = (RandomReal[{0, 1}, 1*10^5]);","\n","Y = (RandomInteger[1, {1*10^5}] - .5);","\n","B = Sign[b - X];","\n","YY = Module[{Ynew = Y, j = 1},","\n","Do[","\n","Ynew[[i]] = B[[i]]*(Ynew[[i - p + 1]] + Ynew[[i - p + 2]])*.5*.996","\n",", {i, p, Length[Ynew] - 1}];","\n","Ynew];","\n","Sound[SampledSoundList[YY, 88000]]","\n",")"}],"\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",RowBox[
{"(* choose pitch frequency based on the probability distribution of \\","\n","the coefficients.  *)","\n","makeLineMusic2[fcs_] := (","\n","p = RandomSample[","\n","Delete[fcs, {{1}, {2}}] \[Rule] Table[i, {i, 3, Length[fcs]}], 1][[1]];","\n","pp = Min[Round[200*2^(-(2 p - 49)/24)], 600];","\n","If[pp == 600, pp = Round[pp*RandomReal[]], pp = pp];","\n","karplusStrongSynthesisX[pp, 1]","\n",")"}],"\n","\n","\n",RowBox[
{"importEdgeImage[url_] := (","\n","EdgeDetect[Import[url], 3, .08]","\n",")"}],"\n","\n","\n",RowBox[
{"getLines[img_] := (","\n","pointListToLines[Position[ImageData[img], 1]]","\n",")"}],"\n","\n","\n","\n","\n","\n","\n",RowBox[
{"getFourier[lines] := (","\n","fourierComponents[lines]","\n",")"}],"\n",RowBox[
{"chooseCoeff[fcs_] := (","\n","RandomSample[","\n","Delete[fcs, {{1}, {2}}] \[Rule] Table[i, {i, 3, Length[fcs]}], 1][[1]])"}],"\n","\n",RowBox[
{"imageGuitar[url_] := (","\n","img = importEdgeImage[url];","\n","lines = getLines[img];","\n","n = Min[Length[lines], 25];","\n","fff = fourierComponents[lines[[1 ;; n]]];","\n","V1 = ConstantArray[0, Length[fff]];","\n","V2 = ConstantArray[0, Length[fff]];","\n","Do[V1[[i]] =","\n","Table[j - 1, {j, Length[fff[[i]][[2]][[1]][[1]]]}] Sqrt[","\n","fff[[i]][[2]][[1]][[1]]^2 + fff[[i]][[2]][[1]][[2]]^2 +","\n","fff[[i]][[2]][[2]][[1]]^2 + fff[[i]][[2]][[2]][[2]]^2], {i, 1,","\n","Length[fff]}];","\n","Do[V2[[i]] = chooseCoeff[V1[[i]]], {i, 1, Length[fff]}];","\n","ExportString[{V2, lines},","\"JSON\"","]","\n",")"}],"\n","\n","\n",RowBox[
{"CloudDeploy[APIFunction[{","\"url\"","\[Rule]String},imageGuitar[#url]&],Permissions\[Rule]","\"Public\"","]","\n","\n","\n"}]}],
"Input",CellID->11,CellLabel->"In[3]:= "],Cell[
BoxData[TagBox[InterpretationBox[
RowBox[{"CloudObject","[",TagBox[ButtonBox[PaneSelectorBox[{False->"\"https://www.wolframcloud.com/objects/3475f790-1896-4e57-b47f-c263681ec7a0\"",True->StyleBox[
"\"https://www.wolframcloud.com/objects/3475f790-1896-4e57-b47f-c263681ec7a0\"",{"HyperlinkActive"}]},
Dynamic[CurrentValue["MouseOver"]],BaseStyle->{"Hyperlink"},FrameMargins->0,ImageSize->Automatic],
BaseStyle->"Hyperlink",ButtonData->{URL["https://www.wolframcloud.com/objects/3475f790-1896-4e57-b47f-c263681ec7a0"],None},
ButtonNote->"https://www.wolframcloud.com/objects/3475f790-1896-4e57-b47f-c263681ec7a0"],
Function[Annotation[Slot[1],"https://www.wolframcloud.com/objects/3475f790-1896-4e57-b47f-c263681ec7a0",
"Hyperlink"]]],"]"}],CloudObject["https://www.wolframcloud.com/objects/3475f790-1896-4e57-b47f-c263681ec7a0"]],
"RawBoxes"],StandardForm],"Output",CellID->14,CellLabel->"Out[14]= "]},Open]],Cell[
BoxData[
RowBox[{"imageGuitar[","\"https://scontent.xx.fbcdn.net/hphotos-xpf1/v/t1.0-9/10401580_10154221401540298_770436156325074254_n.jpg?oh=169dbc8d3c325ab84a2fc1474884405c&oe=5589A357\"","]"}]],
"Input",CellID->20,CellLabel->"In[155]:= "],Cell[
BoxData[RowBox[{"\n","\n","\n","(*Calculate line frequencies based on length of the line*)","\n","collectFrequencies[l_,i_] := (","\n","Max[Round[(41/(Length[l[[-1]]]-Length[l[[1]]])*(Length[l[[i]]]-Length[l[[-1]]]) +44)*RandomReal[]],3]","\n",")"}]],
"Input",CellID->22,CellLabel->"In[21]:= "],Cell[
BoxData[RowBox[{"imageGuitar2[url_] := (","\n","img = importEdgeImage[url];","\n","lines = getLines[img];","\n","n = Min[Length[lines], 25];","\n","lines=lines[[1;;n]];","\n","\n","V2=Table[0,{i,1,Length[lines]}];","\n","Do[V2[[i]] = collectFrequencies[lines,i], {i, 1, Length[lines]}];","\n","ExportString[{V2, lines},","\"JSON\"","]","\n",")","\n"}]],
"Input",CellID->21,CellLabel->"In[19]:= "],Cell[
CellGroupData[{Cell[
BoxData[RowBox[
{"CloudDeploy[APIFunction[{","\"url\"","\[Rule]String},imageGuitar2[#url]&],Permissions\[Rule]","\"Public\"","]"}]],
"Input",CellID->23,CellLabel->"In[22]:= "],Cell[
BoxData[TagBox[InterpretationBox[
RowBox[{"CloudObject","[",TagBox[ButtonBox[PaneSelectorBox[{False->"\"https://www.wolframcloud.com/objects/861b5731-6592-4b69-b9e6-8d6c8b7f4065\"",True->StyleBox[
"\"https://www.wolframcloud.com/objects/861b5731-6592-4b69-b9e6-8d6c8b7f4065\"",{"HyperlinkActive"}]},
Dynamic[CurrentValue["MouseOver"]],BaseStyle->{"Hyperlink"},FrameMargins->0,ImageSize->Automatic],
BaseStyle->"Hyperlink",ButtonData->{URL["https://www.wolframcloud.com/objects/861b5731-6592-4b69-b9e6-8d6c8b7f4065"],None},
ButtonNote->"https://www.wolframcloud.com/objects/861b5731-6592-4b69-b9e6-8d6c8b7f4065"],
Function[Annotation[Slot[1],"https://www.wolframcloud.com/objects/861b5731-6592-4b69-b9e6-8d6c8b7f4065",
"Hyperlink"]]],"]"}],CloudObject["https://www.wolframcloud.com/objects/861b5731-6592-4b69-b9e6-8d6c8b7f4065"]],
"RawBoxes"],StandardForm],"Output",CellID->31,CellLabel->"Out[22]= "]},Open]],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"imageGuitar2[","\"http://upload.wikimedia.org/wikipedia/en/7/7e/Patrick_Star.png\"","]"}]],
"Input",CellID->28,CellLabel->"In[107]:= "],Cell[
BoxData[InterpretationBox[TagBox[
FrameBox[GridBox[{{ItemBox[TagBox[RowBox[{"\"[\\n    [\\n        6074,\\n        3012,\\n        1088,\\n        1072,\\n        955,\\n        508,\\n        385,\\n        350,\\n        164,\\n        1\"","\[Ellipsis]","\"              95,\\n                150\\n            ],\\n            [\\n                96,\\n                150\\n            ]\\n        ]\\n    ]\\n]\""}],
Function[Short[Slot[1],5]]],BaseStyle->{Deployed->False},StripOnInput->False]},{GridBox[
{{TagBox[TooltipBox[StyleBox[StyleBox[DynamicBox[ToBoxes[FEPrivate`FrontEndResource[
"FEStrings","sizeBriefExplanation"],StandardForm]],DynamicUpdating->True,StripOnInput->False],
"SuggestionsBarCategory",StripOnInput->False],StyleBox[DynamicBox[ToBoxes[FEPrivate`FrontEndResource[
"FEStrings","sizeExplanation"],StandardForm]],DynamicUpdating->True,StripOnInput->False]],
Function[Annotation[Slot[1],Style[Dynamic[FEPrivate`FrontEndResource["FEStrings",
"sizeExplanation"]],DynamicUpdating->True],"Tooltip"]]],ButtonBox[PaneSelectorBox[
{False->StyleBox[StyleBox[DynamicBox[ToBoxes[FEPrivate`FrontEndResource["FEStrings",
"sizeShowLess"],StandardForm]],DynamicUpdating->True,StripOnInput->False],"SuggestionsBarControl",
StripOnInput->False],True->StyleBox[StyleBox[DynamicBox[ToBoxes[FEPrivate`FrontEndResource[
"FEStrings","sizeShowLess"],StandardForm]],DynamicUpdating->True,StripOnInput->False],
"SuggestionsBarControlActive",StripOnInput->False]},Dynamic[CurrentValue["MouseOver"]],
ImageSize->{Automatic,25},Alignment->Center,ImageSize->Automatic,FrameMargins->0],
RuleDelayed[ButtonFunction,OutputSizeLimit`ButtonFunction[Identity,107,24096933402592537869,
Times[5,Power[2,-1]]]],Appearance->None,Enabled->True,Method->"Queued",Evaluator->Automatic],ButtonBox[
PaneSelectorBox[{False->StyleBox[StyleBox[DynamicBox[ToBoxes[FEPrivate`FrontEndResource[
"FEStrings","sizeShowMore"],StandardForm]],DynamicUpdating->True,StripOnInput->False],
"SuggestionsBarControl",StripOnInput->False],True->StyleBox[StyleBox[DynamicBox[ToBoxes[
FEPrivate`FrontEndResource["FEStrings","sizeShowMore"],StandardForm]],DynamicUpdating->True,
StripOnInput->False],"SuggestionsBarControlActive",StripOnInput->False]},Dynamic[
CurrentValue["MouseOver"]],ImageSize->{Automatic,25},Alignment->Center,ImageSize->Automatic,
FrameMargins->0],RuleDelayed[ButtonFunction,OutputSizeLimit`ButtonFunction[Identity,
107,24096933402592537869,Times[5,2]]],Appearance->None,Enabled->True,Method->"Queued",
Evaluator->Automatic],ButtonBox[PaneSelectorBox[{False->StyleBox[StyleBox[DynamicBox[
ToBoxes[FEPrivate`FrontEndResource["FEStrings","sizeShowAll"],StandardForm]],DynamicUpdating->True,
StripOnInput->False],"SuggestionsBarControl",StripOnInput->False],True->StyleBox[
StyleBox[DynamicBox[ToBoxes[FEPrivate`FrontEndResource["FEStrings","sizeShowAll"],
StandardForm]],DynamicUpdating->True,StripOnInput->False],"SuggestionsBarControlActive",
StripOnInput->False]},Dynamic[CurrentValue["MouseOver"]],ImageSize->{Automatic,25},
Alignment->Center,ImageSize->Automatic,FrameMargins->0],RuleDelayed[ButtonFunction,
OutputSizeLimit`ButtonFunction[Identity,107,24096933402592537869,Infinity]],Appearance->None,
Enabled->True,Method->"Queued",Evaluator->Automatic],ButtonBox[PaneSelectorBox[{False->StyleBox[
StyleBox[DynamicBox[ToBoxes[FEPrivate`FrontEndResource["FEStrings","sizeChangeLimit"],
StandardForm]],DynamicUpdating->True,StripOnInput->False],"SuggestionsBarControl",
StripOnInput->False],True->StyleBox[StyleBox[DynamicBox[ToBoxes[FEPrivate`FrontEndResource[
"FEStrings","sizeChangeLimit"],StandardForm]],DynamicUpdating->True,StripOnInput->False],
"SuggestionsBarControlActive",StripOnInput->False]},Dynamic[CurrentValue["MouseOver"]],
ImageSize->{Automatic,25},Alignment->Center,ImageSize->Automatic,FrameMargins->0],
RuleDelayed[ButtonFunction,FrontEndExecute[{FrontEnd`SetOptions[FrontEnd`$FrontEnd,
FrontEnd`PreferencesSettings->{"Page"->"Evaluation"}],FrontEnd`FrontEndToken["PreferencesDialog"]}]],
Appearance->None,Evaluator->None,Method->"Preemptive"]}},AutoDelete->False,GridBoxDividers->{"Columns"->{False,{True}}},
GridBoxItemSize->{"Columns"->{{Automatic}},"Rows"->{{Automatic}}},GridBoxSpacings->{"Columns"->{{2}}},
FrameStyle->GrayLevel[0.85]]}},GridBoxAlignment->{"Columns"->{{Left}}},DefaultBaseStyle->"Column",
GridBoxItemSize->{"Columns"->{{Automatic}},"Rows"->{{Automatic}}},ColumnWidths->Automatic,
ColumnAlignments->Left,RowLines->False,RowSpacings->{3,1}],Background->RGBColor[0.9657,
0.9753,0.9802],FrameMargins->{{12,12},{0,15}},FrameStyle->GrayLevel[0.85],RoundingRadius->5,
StripOnInput->False],Deploy,DefaultBaseStyle->"Deploy"],Out[107]],StandardForm],"Output",
CellID->48,CellLabel->"Out[107]= "]},Open]]},StyleDefinitions->"Default.nb",WindowSize->{800,441},
FrontEndVersion->"10.0 for Wolfram Cloud Platform (June 2 2014)"]